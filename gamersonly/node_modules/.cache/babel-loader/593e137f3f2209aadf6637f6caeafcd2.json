{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thomaskirkland/g106/Gamers-only.com/gamersonly/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/thomaskirkland/g106/Gamers-only.com/gamersonly/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/thomaskirkland/g106/Gamers-only.com/gamersonly/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/thomaskirkland/g106/Gamers-only.com/gamersonly/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thomaskirkland/g106/Gamers-only.com/gamersonly/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thomaskirkland/g106/Gamers-only.com/gamersonly/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thomaskirkland/g106/Gamers-only.com/gamersonly/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thomaskirkland/g106/Gamers-only.com/gamersonly/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thomaskirkland/g106/Gamers-only.com/gamersonly/src/pages/Forum.js\";\nimport React, { Component } from 'react';\nimport Post from '../components/Post';\nimport ComposingPost from '../components/ComposePost';\n\nvar Feed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Feed, _Component);\n\n  function Feed() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Feed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      composing: false,\n      posts: [],\n      postTitle: \"\",\n      postBody: \"\"\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, posts, newState;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:3678/api/posts/', {\n                method: 'GET'\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              posts = _context.sent;\n              console.log(posts);\n              newState = {\n                posts: _toConsumableArray(posts)\n              };\n\n              _this.setState(newState);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var postInfo, response, newState;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                postInfo = {\n                  poster_user_id: 2,\n                  post_title: _this.state.postTitle,\n                  post_description: _this.state.postBody\n                };\n                _context2.next = 4;\n                return fetch('http://localhost:3678/api/posts/', {\n                  method: 'POST',\n                  body: JSON.stringify(postInfo),\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                  }\n                });\n\n              case 4:\n                response = _context2.sent;\n                _context2.next = 7;\n                return response.json();\n\n              case 7:\n                newState = _context2.sent;\n\n                _this.setState({\n                  posts: [].concat(_toConsumableArray(_this.state.posts), [newState])\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.titleChange = function (e) {\n      _this.setState({\n        postTitle: e.target.value\n      });\n\n      console.log(e.target.value);\n    };\n\n    _this.bodyChange = function (e) {\n      _this.setState({\n        postBody: e.target.value\n      });\n\n      console.log(e.target.value);\n    };\n\n    _this.togglePost = function () {\n      _this.setState({\n        composing: !_this.state.composing,\n        posts: _this.state.posts\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        id: \"background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          _this2.togglePost();\n        },\n        className: \"m-4 btn btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Create Post\"), this.state.composing ? React.createElement(ComposingPost, {\n        togglePost: this.togglePost,\n        postTitle: this.state.postTitle,\n        postBody: this.state.postBody,\n        bodyChange: this.bodyChange,\n        titleChange: this.titleChange,\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }) : this.state.posts.length > 0 ? this.state.posts.map(function (post, i) {\n        return React.createElement(Post, {\n          post: post,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      }) : React.createElement(\"p\", {\n        id: \"font-color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"No Posts have been made.\"));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport default Feed;","map":{"version":3,"sources":["/Users/thomaskirkland/g106/Gamers-only.com/gamersonly/src/pages/Forum.js"],"names":["React","Component","Post","ComposingPost","Feed","state","composing","posts","postTitle","postBody","componentDidMount","fetch","method","response","json","console","log","newState","setState","handleSubmit","e","preventDefault","postInfo","poster_user_id","post_title","post_description","body","JSON","stringify","headers","titleChange","target","value","bodyChange","togglePost","length","map","post","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Post from '../components/Post'\nimport ComposingPost from '../components/ComposePost'\n\nclass Feed extends Component {\n\n  state = {\n    composing: false,\n    posts: [],\n    postTitle: \"\",\n    postBody: \"\"\n  }\n\n  componentDidMount = async () => {\n    let response = await fetch('http://localhost:3678/api/posts/',{\n      method: 'GET',\n    })\n    let posts = await response.json()\n    console.log(posts)\n    let newState = {\n      posts: [...posts]\n    }\n    this.setState(newState)\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n    let postInfo = {\n      poster_user_id: 2,\n      post_title: this.state.postTitle,\n      post_description: this.state.postBody\n    }\n    const response = await fetch('http://localhost:3678/api/posts/', {\n      method: 'POST',\n      body: JSON.stringify(postInfo),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })\n    let newState = await response.json()\n    this.setState({\n      posts: [...this.state.posts, newState]\n    })\n  }\n\n  titleChange = (e) => {\n    this.setState({\n      postTitle: e.target.value\n    })\n    console.log(e.target.value)\n  }\n\n  bodyChange = (e) => {\n    this.setState({\n      postBody: e.target.value\n    })\n    console.log(e.target.value)\n  }\n\n  togglePost = () => {\n    this.setState({\n      composing: !this.state.composing,\n      posts: this.state.posts\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"background\">\n        <button type=\"button\" onClick={()=> {this.togglePost()}} className=\"m-4 btn btn-danger\">Create Post</button>\n        {this.state.composing ? <ComposingPost togglePost={this.togglePost} postTitle={this.state.postTitle} postBody={this.state.postBody} bodyChange={this.bodyChange} titleChange={this.titleChange} handleSubmit={this.handleSubmit}/> : this.state.posts.length > 0 ? this.state.posts.map((post, i) => <Post post={post} key={i}/>) : <p id=\"font-color\">No Posts have been made.</p>}\n      </div>\n    )\n  }\n\n}\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}